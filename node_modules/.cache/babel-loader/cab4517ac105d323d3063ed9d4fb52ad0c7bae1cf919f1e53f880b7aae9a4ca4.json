{"ast":null,"code":"var _jsxFileName = \"/Users/glorifactor/Desktop/Code/New Code/ChadPool/src/components/ServiceCard.js\";\n// src/components/ServiceCard.js\nimport React from 'react';\nimport { FiDroplet, FiLayout, FiTool } from 'react-icons/fi';\nimport PropTypes from 'prop-types';\n\n// Define icon components directly (no string mapping needed)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServiceCard = ({\n  service,\n  variant = 'default'\n}) => {\n  // Select icon based on service.type or other property\n  const getIcon = () => {\n    switch (service.iconType) {\n      // Assuming you add iconType to service objects\n      case 'droplet':\n        return /*#__PURE__*/_jsxDEV(FiDroplet, {\n          className: \"service-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 30\n        }, this);\n      case 'tool':\n        return /*#__PURE__*/_jsxDEV(FiTool, {\n          className: \"service-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 27\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(FiLayout, {\n          className: \"service-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 23\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"service-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon-outline\",\n      style: {\n        background: service.gradient\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-container\",\n        children: getIcon()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"service-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: service.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: service.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n};\n_c = ServiceCard;\nServiceCard.propTypes = {\n  service: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    gradient: PropTypes.string,\n    waterEffect: PropTypes.bool,\n    iconType: PropTypes.oneOf(['layout', 'tool', 'droplet']).isRequired\n  }).isRequired,\n  variant: PropTypes.oneOf(['default', 'minimal', 'featured'])\n};\nexport default ServiceCard;\nvar _c;\n$RefreshReg$(_c, \"ServiceCard\");","map":{"version":3,"names":["React","FiDroplet","FiLayout","FiTool","PropTypes","jsxDEV","_jsxDEV","ServiceCard","service","variant","getIcon","iconType","className","fileName","_jsxFileName","lineNumber","columnNumber","children","style","background","gradient","title","description","_c","propTypes","shape","id","number","isRequired","string","waterEffect","bool","oneOf","$RefreshReg$"],"sources":["/Users/glorifactor/Desktop/Code/New Code/ChadPool/src/components/ServiceCard.js"],"sourcesContent":["// src/components/ServiceCard.js\nimport React from 'react';\nimport { FiDroplet, FiLayout, FiTool } from 'react-icons/fi';\nimport PropTypes from 'prop-types';\n\n// Define icon components directly (no string mapping needed)\nconst ServiceCard = ({ service, variant = 'default' }) => {\n  // Select icon based on service.type or other property\n  const getIcon = () => {\n    switch(service.iconType) { // Assuming you add iconType to service objects\n      case 'droplet': return <FiDroplet className=\"service-icon\" />;\n      case 'tool': return <FiTool className=\"service-icon\" />;\n      default: return <FiLayout className=\"service-icon\" />;\n    }\n  };\n\n  return (\n      <div className=\"service-card\">\n      <div className=\"icon-outline\" style={{ background: service.gradient }}>\n        <div className=\"icon-container\">\n          {getIcon()}\n        </div>\n      </div>\n      <div className=\"service-content\">\n        <h3>{service.title}</h3>\n        <p>{service.description}</p>\n      </div>\n    </div>\n  );\n};\n\nServiceCard.propTypes = {\n  service: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    gradient: PropTypes.string,\n    waterEffect: PropTypes.bool,\n    iconType: PropTypes.oneOf(['layout', 'tool', 'droplet']).isRequired\n  }).isRequired,\n  variant: PropTypes.oneOf(['default', 'minimal', 'featured'])\n};\n\nexport default ServiceCard;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,gBAAgB;AAC5D,OAAOC,SAAS,MAAM,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC,OAAO,GAAG;AAAU,CAAC,KAAK;EACxD;EACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,QAAOF,OAAO,CAACG,QAAQ;MAAI;MACzB,KAAK,SAAS;QAAE,oBAAOL,OAAA,CAACL,SAAS;UAACW,SAAS,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC7D,KAAK,MAAM;QAAE,oBAAOV,OAAA,CAACH,MAAM;UAACS,SAAS,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACvD;QAAS,oBAAOV,OAAA,CAACJ,QAAQ;UAACU,SAAS,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IACvD;EACF,CAAC;EAED,oBACIV,OAAA;IAAKM,SAAS,EAAC,cAAc;IAAAK,QAAA,gBAC7BX,OAAA;MAAKM,SAAS,EAAC,cAAc;MAACM,KAAK,EAAE;QAAEC,UAAU,EAAEX,OAAO,CAACY;MAAS,CAAE;MAAAH,QAAA,eACpEX,OAAA;QAAKM,SAAS,EAAC,gBAAgB;QAAAK,QAAA,EAC5BP,OAAO,CAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNV,OAAA;MAAKM,SAAS,EAAC,iBAAiB;MAAAK,QAAA,gBAC9BX,OAAA;QAAAW,QAAA,EAAKT,OAAO,CAACa;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBV,OAAA;QAAAW,QAAA,EAAIT,OAAO,CAACc;MAAW;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACO,EAAA,GAvBIhB,WAAW;AAyBjBA,WAAW,CAACiB,SAAS,GAAG;EACtBhB,OAAO,EAAEJ,SAAS,CAACqB,KAAK,CAAC;IACvBC,EAAE,EAAEtB,SAAS,CAACuB,MAAM,CAACC,UAAU;IAC/BP,KAAK,EAAEjB,SAAS,CAACyB,MAAM,CAACD,UAAU;IAClCN,WAAW,EAAElB,SAAS,CAACyB,MAAM,CAACD,UAAU;IACxCR,QAAQ,EAAEhB,SAAS,CAACyB,MAAM;IAC1BC,WAAW,EAAE1B,SAAS,CAAC2B,IAAI;IAC3BpB,QAAQ,EAAEP,SAAS,CAAC4B,KAAK,CAAC,CAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC,CAACJ;EAC3D,CAAC,CAAC,CAACA,UAAU;EACbnB,OAAO,EAAEL,SAAS,CAAC4B,KAAK,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,UAAU,CAAC;AAC7D,CAAC;AAED,eAAezB,WAAW;AAAC,IAAAgB,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}